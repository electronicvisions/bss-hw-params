@Library("jenlib") _

try {
	withCcache() {
		wafDefaultPipeline(projects: ["bss-hw-params"],
		                   container: [app: "dls-nodev"],
		                   notificationChannel: "#jenkins-trashbin")  // success checked globally
	}

	runOnSlave(label: "frontend") {
		cleanWs()
	}

	withCcache() {
		wafDefaultPipeline(projects: ["bss-hw-params"],
		                   container: [image: getDefaultAsicContainerPath(), app: "asic"],
		                   notificationChannel: "#jenkins-trashbin", // success checked globally
		                   enableClangTidy: false,  // no 'bear' in ASIC container
		                   enableCppcheck: false,  // no 'bear' in ASIC container
		                   enableClangFormat: false) // not available in ASIC container
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#softies")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#softies")
}
